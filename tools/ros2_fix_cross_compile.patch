--- a/src/ros2/pybind11_vendor/CMakeLists.txt
+++ b/src/ros2/pybind11_vendor/CMakeLists.txt
@@ -54,6 +54,8 @@ macro(build_pybind11)
       -DCMAKE_INSTALL_PREFIX=${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}_install
       -DPYBIND11_TEST=OFF
       ${extra_cmake_args}
+    PATCH_COMMAND
+      git apply --whitespace=nowarn ${CMAKE_CURRENT_SOURCE_DIR}/fix_cross_compile.patch
   )

   # The external project will install to the build folder, but we'll install that on make install.
--- /dev/null
+++ b/src/ros2/pybind11_vendor/fix_cross_compile.patch
@@ -0,0 +1,14 @@
+--- a/tools/FindPythonLibsNew.cmake
++++ b/tools/FindPythonLibsNew.cmake
+@@ -120,7 +120,10 @@ list(GET _PYTHON_VALUES 9 PYTHON_MULTIARCH)
+
+ # Make sure the Python has the same pointer-size as the chosen compiler
+ # Skip if CMAKE_SIZEOF_VOID_P is not defined
+-if(CMAKE_SIZEOF_VOID_P AND (NOT "${PYTHON_SIZEOF_VOID_P}" STREQUAL "${CMAKE_SIZEOF_VOID_P}"))
++# This should be skipped for (non-Apple) cross-compiles (like EMSCRIPTEN)
++if(NOT CMAKE_CROSSCOMPILING
++   AND CMAKE_SIZEOF_VOID_P
++   AND (NOT "${PYTHON_SIZEOF_VOID_P}" STREQUAL "${CMAKE_SIZEOF_VOID_P}"))
+     if(PythonLibsNew_FIND_REQUIRED)
+         math(EXPR _PYTHON_BITS "${PYTHON_SIZEOF_VOID_P} * 8")
+         math(EXPR _CMAKE_BITS "${CMAKE_SIZEOF_VOID_P} * 8")
