# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

name: CI

on:
  push:
    branches: [ '*' ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ '*' ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-amd64:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - uses: "./.github/template/fwe-build"
        with:
          build-arch: "native"
          upload-arch: "amd64"

  build-arm64:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - uses: "./.github/template/fwe-build"
        with:
          build-arch: "cross-arm64"
          upload-arch: "arm64"

  build-armhf:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - uses: "./.github/template/fwe-build"
        with:
          build-arch: "cross-armhf"
          upload-arch: "armhf"

  build-docker:
    runs-on: ubuntu-18.04
    needs:
      - build-amd64
      - build-arm64
      - build-armhf
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Move artifacts to match buildx TARGETPLATFORM structure
        run: |
          mkdir -p linux/arm
          mv build-amd64 linux/amd64
          mv build-arm64 linux/arm64
          mv build-armhf linux/arm/v7
          find linux -name aws-iot-fleetwise-edge -exec chmod +x {} \;
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - uses: docker/build-push-action@v3
        with:
          context: .
          file: "./tools/container/Dockerfile"
          push: ${{ github.ref_type == 'tag' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: type=gha
          cache-to: type=gha,mode=max
